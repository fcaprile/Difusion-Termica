import numpy as np
import math as m
import os
import string
from scipy.optimize import curve_fit
import matplotlib.pyplot as plt
plt.figure(num=None, figsize=(8, 4), dpi=80, facecolor='w', edgecolor='k')

#cargo los txt
tiempo=np.loadtxt('C:/Users/ferchi/.spyder-py3/labo/Mediciones/difusion/cuadrada/t.txt', delimiter = ',')
datos=np.loadtxt('C:/Users/ferchi/.spyder-py3/labo/Mediciones/difusion/cuadrada/x.txt', delimiter = ',')
tiempo=tiempo[:,2200:]
datos=datos[:,2200:]

#matriz picos: la 3º dimension es para separar el y, y el t
picos=np.zeros((6,10,2))

for a in range(6):
    x=tiempo[a,:]
    y=datos[a,:]
    ey=np.linspace(0.2,0.2,len(y))
    r=0.0025
    d=6
    picosy=[]
    picosx=[]
    i=d
    ar=1
    ab=-1
    
    while i<len(x)-5*d:
        if y[i]-y[i+d]>r and y[i]-y[i+2*d]>2*r and y[i]-y[i+3*d]>3*r and y[i]-y[i+4*d]>4*r and y[i]-y[i+5*d]>5*r and y[i]-y[i-d]>r and y[i]-y[i-2*d]>2*r and y[i]-y[i-3*d]>3*r and y[i]-y[i-4*d]>4*r and y[i]-y[i-5*d]>5*r:     
            picosy.append(y[i])
            picosx.append(x[i])
            i=i+5*d
        i+=1
    if a==1:
        picosx.remove(picosx[0])
        picosy.remove(picosy[0])

    if len(picosx)<10:
        picosx.append('nan')
        picosy.append('nan')


    picosy=np.array(picosy)
    picosx=np.array(picosx)
    picos[a,:,0]=picosx
    picos[a,:,1]=picosy
    plt.plot(x[ar:ab],y[ar:ab],'b-')#x e y deben ser vectores del mismo tamaño
    plt.errorbar(x[ar:ab],y[ar:ab],ey[ar:ab],linestyle = 'None')
for i in range(6):    
    plt.scatter(picos[i,:,0],picos[i,:,1],s=50,c='r')        
#plt.plot(x,f(x, popt[0],popt[1]), 'g-', label = 'Ajuste')#los popt son los valores de las variables fiteadas que usara la funcion f                      
plt.grid(True) # Para que quede en hoja cuadriculada
plt.title('Temperatura en función del tiempo')
plt.xlabel('Tiempo (s)')
plt.ylabel('Temperatura (ºC)')
plt.legend(loc = 'best')

